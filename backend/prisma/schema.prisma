generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Application {
  id              String    @id @map("_id")
  FirstApplicant  Applicant
  SecondApplicant Applicant
  Financing       Financing
  HouseHold       HouseHold
}

type Applicant {
  applicantNumber String
  firstName       String
  lastName        String
  employer        String
  employedSince   DateTime
  birthday        DateTime
  Address         Address
  Business        Business
  Employment      Employment
  MaritalStatus   MaritalStatus
}

type Financing {
  financingNeeds Float
  OwnResources   OwnResources
  PurchaseCosts  PurchaseCosts
  Loans          Loan[]
}

type HouseHold {
  adultsInHousehold   Int
  childrenInHousehold Int
  iban                String
  bic                 String
  EarningCapacity     EarningCapacity
  MonthlyExpenses     MonthlyExpenses
}

// Auxiliary models

type Address {
  street   String
  city     String
  postCode String

}

enum Business {
  BANKING
  INSURANCE
  ENERGY
  CONSTRUCTION
  AGRICULTURE
  INDUSTRY
  PUBLIC_SERVICE
  OTHER
}

enum Employment {
  EMPLOYEE
  OFFICIAL
  PENSIONER
  STUDENT
  TRAINEE
  FREELANCER
  UNEMPLOYED
  OTHER
}

enum MaritalStatus {
  MARRIED
  SINGLE
  DIVORCED
  WIDOWED
}

type Loan {
  loanAmount               Float
  interestRate             Float
  repaymentInPercent       Float
  fixedInterestRateInYears Float
}

type OwnResources {
  liquidAssets               Float
  balanceFromBuildingSociety Float
  ownManpower                Float
}

type PurchaseCosts {
  priceOfLand               Float
  reconstructionCosts       Float
  additionalPurchaseCharges Float
}

type EarningCapacity {
  salaryFirstApplicant         Float
  salarySecondApplicant        Float
  rentalIncomeFinancedProperty Float
  rentalIncomeOtherProperties  Float
  furtherIncome                Float
  childBenefit                 Float
  assetsOnBankAccounts         Float
  assetsOther                  Float
}

type MonthlyExpenses {
  healthInsuranceFirstApplicant  Float
  healthInsuranceSecondApplicant Float
  otherLoansRemainderOfDebt      Float
  otherLoansMonthlyRepayments    Float
  costOfLiving                   Float
  rent                           Float
  rentNotApplicableInFuture      Boolean

}
